pipeline {
    agent any
    environment {
        AWS_SESSION_TOKEN = credentials('aws-session-token')
    }
    stages {
        stage('Setup AWS') {
            steps {
                
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'official-aws',
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]){
                        
                        sh 'aws --version'
                        sh "aws s3 ls"
                    }
            }
        }
        stage('test'){
            steps{
                echo "deploying static website using cfn and s3"
            }
        }
        stage('Checkout Code') {
            steps {
                script {
                    // Clean up previous clone if exists
                    sh 'rm -rf testing'
                    git credentialsId: 'github-creds', url: 'https://github.com/vishakha27kalra/testing.git', branch: 'main'
                    sh 'pwd'
                    sh 'ls -R'   
                }
            }
        }
        stage('Deploy CloudFormation') {
            steps {
                script{
                    def stackName = 'stacknew'
                    mygroovy(stackName)
                }    
            }
        }
        
    }
}
